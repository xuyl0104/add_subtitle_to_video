#!/usr/bin/python
# -*- coding: utf-8 -*-
import sys
import os

time_list = []
subtitle_list = []

# A util function:
# transform a timestamp from Youtube subtitle format like "69:17" to 
# the standard srt subtitle time format like "01:09:17,050"
# the miliseconds ,050 is hardcoded, you can change accordingly
def time_2_standard_time(time):
    timestamp = ""
    minutes = int(time.split(":")[0])
    hours = minutes / 60
    if hours == 0:
        timestamp += "00:"
    elif hours < 10 and hours > 0:
        timestamp += "0" + str(hours) + ":"
    else:
        timestamp += str(hours) + ":"

    minute = minutes % 60
    if minute < 10:
        timestamp += "0" + str(minute) + ":"
    else:
        timestamp += str(minute) + ":"

    seconds = int(time.split(":")[1])
    if seconds < 10:
        timestamp += "0" + str(seconds)
    else:
        timestamp += str(seconds)
    
    timestamp += ",050"
    time_list.append(timestamp)

    return timestamp


# transform all time in the file to the standard format
def transform_time_format(input_filepath, output_filepath):
    # check the existence of files
    if os.path.exists(output_filepath):
        os.remove(output_filepath)
    count = 0
    with open(input_filepath, 'r') as in_file:
        for line in in_file:
            count += 1
            # this line is a time
            if count % 2 == 1:
                new_time = time_2_standard_time(line)
                with open(output_filepath, 'a+') as out_file:
                    out_file.write(new_time + "\n")
            
            # this line is a line of content
            else:
                subtitle_list.append(line)
                with open(output_filepath, 'a+') as out_file:
                    out_file.write(line)
    return


# generate srt subtitle file
def generate_srt(srt_filepath):
    if os.path.exists(srt_filepath):
        os.remove(srt_filepath)
    with open(srt_filepath, 'a+') as srt_file:
        for counter in range(len(time_list) - 1):
            # 1. write the index of the subtitle
            srt_file.write(str(counter + 1) + "\n")
            # 2. start time and end time of the subtitle
            time = time_list[counter] + " --> " + time_list[counter + 1].split(",")[0] + ",040" + "\n"
            srt_file.write(time)
            # 3. write content of the subtitle
            srt_file.write(subtitle_list[counter])
            # 4. write a newline to end the subtitle
            srt_file.write("\n")
    return


# call ffmpeg to embed srt subtitles into the video as a stream/track
def call_ffmpeg(video_filepath, srt_filepath, output_video_filepath):
    os.system("ffmpeg -i {0} -i {1} -c copy -c:s mov_text {2}".format(
        video_filepath, srt_filepath, output_video_filepath
    ))


if __name__ == '__main__':
    # change these according to your need
    # the su`b`titles copied from youtube
    subtitle_path = "./subtitle.txt"
    # intermedia subtitle file name; name it whatever you want
    new_subtitle_path = "./new_subtitle.txt"
    
    # srt subtitle file generated by this code; name it whatever you want
    srt_path = "./subtitle.srt"
    # video file you are embedding subtitles on
    video_path = "./f1_2.webm"
    # output video name
    output_video_path = "./output.mp4"
    
    transform_time_format(subtitle_path, new_subtitle_path)
    print(time_list)
    print(subtitle_list)

    generate_srt(srt_path)

    call_ffmpeg(video_path, srt_path, output_video_path)
